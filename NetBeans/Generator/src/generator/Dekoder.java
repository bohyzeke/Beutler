/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generator;
import java.util.Random;


/**
 *
 * @author Eduard Bohacek
 */
public class Dekoder extends javax.swing.JFrame {

    
    
 
   private static int[] codeATemp = null;    
   private static Random utilRandom = null;    
    
    
    /**
    *
    * @author Eduard Bohacek 
    */
   private static void generateCodeATemp()
    {  
        if (utilRandom == null)
        {
          utilRandom = new Random();
        }
    
        int ttt = 80;
        int off = 20;
        codeATemp = new int[4];
        codeATemp[0] = (off + utilRandom.nextInt(ttt));
        codeATemp[1] = (off + utilRandom.nextInt(ttt));
        codeATemp[2] = (off + utilRandom.nextInt(ttt));
        codeATemp[3] = (off + utilRandom.nextInt(ttt));
    }
    
   private static int getCodeATemp()
    {   
        if (codeATemp == null)
        {
            generateCodeATemp();
        }
    
        int in = 0;
        in = codeATemp[0] + in * 100;
        in = codeATemp[1] + in * 100;
        in = codeATemp[2] + in * 100;
        in = codeATemp[3] + in * 100;
        return in;
   }
    
   public static int tempInv(int code){
     int[] a = splitCodeTemp(code);
     int[] b = new int[4];

     b[0] = (a[0] % 11 * 4);
     b[1] = (a[1] % 13 * 3);
     b[2] = (a[2] % 17 * 2);
     b[3] = (a[3] % 19 * 1);

     int in = 0;
     in = b[0] + in * 100;
     in = b[1] + in * 100;
     in = b[2] + in * 100;
     in = b[3] + in * 100;
      return in;
   } 
    
   private static int[] splitCodeTemp(int code){
     int[] codeTemp = new int[4];
     codeTemp[3] = (code % 100);
     code /= 100;
     codeTemp[2] = (code % 100);
     code /= 100;
     codeTemp[1] = (code % 100);
     code /= 100;
     codeTemp[0] = (code % 100);
    return codeTemp;
   }    
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * Creates new form Dekoder
     */
    public Dekoder() {
        initComponents();
        int codeA = getCodeATemp();
        System.out.println(codeA);
        String codeAT = codeA + "";
        //99376666
        InputKodA.setText(codeAT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InputKodA = new javax.swing.JTextField();
        InputKodB = new javax.swing.JTextField();
        LabelKA = new javax.swing.JLabel();
        LabelKB = new javax.swing.JLabel();
        LabelMain = new javax.swing.JLabel();
        ButtonGeneruj = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InputKodA.setBackground(new java.awt.Color(153, 255, 102));
        InputKodA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        InputKodA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InputKodAMouseClicked(evt);
            }
        });
        InputKodA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputKodAActionPerformed(evt);
            }
        });

        InputKodB.setEditable(false);
        InputKodB.setBackground(new java.awt.Color(255, 0, 102));
        InputKodB.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        InputKodB.setToolTipText("");
        InputKodB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputKodBActionPerformed(evt);
            }
        });

        LabelKA.setText("CodeA");

        LabelKB.setText("CodeB");

        LabelMain.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LabelMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelMain.setText("Generator KoduB pre Beutler");

        ButtonGeneruj.setText("Dekoduj");
        ButtonGeneruj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGenerujActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("For  PWO designed by ®Eduard Bohacek 2017©");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LabelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelKA)
                    .addComponent(LabelKB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(ButtonGeneruj))
                    .addComponent(InputKodB, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InputKodA, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LabelMain)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputKodA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelKA))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputKodB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelKB))
                .addGap(7, 7, 7)
                .addComponent(ButtonGeneruj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputKodAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputKodAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputKodAActionPerformed

    private void InputKodBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputKodBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputKodBActionPerformed

    private void ButtonGenerujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerujActionPerformed
        
        int KodA = Integer.parseInt(InputKodA.getText());
        
        System.out.println(KodA);
        
        int KodBT = tempInv(KodA);
        
        System.out.println(KodBT);
        String kodB = KodBT + "";
        InputKodB.setText(kodB);
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonGenerujActionPerformed
        
    private void InputKodAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InputKodAMouseClicked
        InputKodA.setText("");
    }//GEN-LAST:event_InputKodAMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dekoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dekoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dekoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dekoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Dekoder().setVisible(true);
                
                
                
                
                
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonGeneruj;
    private javax.swing.JTextField InputKodA;
    private javax.swing.JTextField InputKodB;
    private javax.swing.JLabel LabelKA;
    private javax.swing.JLabel LabelKB;
    private javax.swing.JLabel LabelMain;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
